[{"C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\index.js":"1","C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\components\\MovieRow\\index.js":"2","C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\App.js":"3","C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\components\\FeaturedMovie\\index.js":"4","C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\Tmdb.js":"5","C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\components\\Header\\index.js":"6"},{"size":197,"mtime":1613159104000,"results":"7","hashOfConfig":"8"},{"size":549,"mtime":1613594778810,"results":"9","hashOfConfig":"8"},{"size":1889,"mtime":1613683731726,"results":"10","hashOfConfig":"8"},{"size":1504,"mtime":1613678516785,"results":"11","hashOfConfig":"8"},{"size":2998,"mtime":1613602672792,"results":"12","hashOfConfig":"8"},{"size":661,"mtime":1613684494189,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ua4naq",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\index.js",[],"C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\components\\MovieRow\\index.js",["31"],"C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\App.js",["32"],"C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\components\\FeaturedMovie\\index.js",["33"],"import React from 'react';\n\nimport './style.css';\n\nexport default ({item}) => {\n\n  let firstDate = new Date(item.first_air_date);\n\n  let genres = [];\n  for(let i in item.genres){\n    genres.push(item.genres[i].name);\n  }\n\n  let descr = item.overview;\n  if(descr.length > 160){\n    descr = descr.substring(0, 160)  + '...';\n  }\n\n  return (\n    <section className=\"featured\" style={{\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    }}>\n      <div className=\"featured--vertical\">\n        <div className=\"featured--horizontal\">\n          <div className=\"featured--name\">{item.name}</div>\n          <div className=\"featured--info\">\n            <div className=\"featured--points\">{item.vote_average} pontos</div>\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n            <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n          </div>\n          <div className=\"featured--description\">{descr}</div>\n          <div className=\"featured--buttons\">\n            <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assistir</a>\n            <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\n          </div>\n            <div className=\"featured--genres\">Gêneros: <strong> {genres.join(', ')} </strong></div>\n        </div>\n      </div>\n    </section>\n  )\n}",["34","35"],"C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\Tmdb.js",["36","37"],"const API_BASE = 'https://api.themoviedb.org/3';\nconst API_KEY = '298a4b03392987af46d1ac1c8f2f2864';\n\nconst basicFetch = async (endpoint) =>{\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = await req.json();\n  return json;\n}\n\nexport default {\n  getHomeList : async () => {\n    return [\n      {\n        slug: 'originals',\n        title: 'Originais Netflix',\n        items: await basicFetch(`/discover/tv/?with_networks=213&api_key=${API_KEY}&language=pt-BR&include_null_first_air_dates=false`)\n      },\n      {\n        slug: 'disney',\n        title: 'Originais Disney+',\n        items: await basicFetch(`/discover/tv/?with_networks=2739&api_key=${API_KEY}&language=pt-BR&include_null_first_air_dates=false`)\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para Você',\n        items: await basicFetch(`/trending/all/week?api_key=${API_KEY}&language=pt-BR`)\n      },\n      {\n        slug: 'toprated',\n        title: 'Em Alta',\n        items: await basicFetch(`/movie/top_rated?api_key=${API_KEY}&language=pt-BR`)\n      },\n      {\n        slug: 'actions',\n        title: 'Ação',\n        items: await basicFetch(`/discover/movie/?with_genres=28&api_key=${API_KEY}&language=pt-BR`)\n      },\n      {\n        slug: 'cartoon',\n        title: 'Animação',\n        items: await basicFetch(`/discover/movie/?with_genres=16&api_key=${API_KEY}&language=pt-BR`)\n      },\n      {\n        slug: 'adventure',\n        title: 'Aventura',\n        items: await basicFetch(`/discover/movie/?with_genres=12&api_key=${API_KEY}&language=pt-BR`)\n      },\n      {\n        slug: 'comedy',\n        title: 'Comédia',\n        items: await basicFetch(`/discover/movie/?with_genres=35&api_key=${API_KEY}&language=pt-BR`)\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        items: await basicFetch(`/discover/movie/?with_genres=27&api_key=${API_KEY}&language=pt-BR`)\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        items: await basicFetch(`/discover/movie/?with_genres=10749&api_key=${API_KEY}&language=pt-BR`)\n      },{\n        slug: 'suspense',\n        title: 'Suspense',\n        items: await basicFetch(`/discover/movie/?with_genres=9648&api_key=${API_KEY}&language=pt-BR`)\n      },\n      {\n        slug: 'fiction',\n        title: 'Ficção Científica',\n        items: await basicFetch(`/discover/movie/?with_genres=878&api_key=${API_KEY}&language=pt-BR`)\n      },\n      {\n        slug: 'crime',\n        title: 'Policial',\n        items: await basicFetch(`/discover/movie/?with_genres=80&api_key=${API_KEY}&language=pt-BR`)\n      }\n    ]\n  },\n\n  getMovieInfo : async (movieId, type) => {\n    let info = {}\n\n    if(movieId){\n      switch(type){\n        case 'movie':\n          info = await basicFetch(`/movie/${movieId}?api_key=${API_KEY}&language=pt-BR`);\n        break;\n\n        case 'tv':\n          info = await basicFetch(`/tv/${movieId}?api_key=${API_KEY}&language=pt-BR`);\n        break;\n      }\n    }\n\n    return info;\n  }\n}",["38","39"],"C:\\wamp\\www\\github\\repositorios\\react\\netflix-clone\\src\\components\\Header\\index.js",["40"],"import React from 'react';\r\nimport Logo from '../../assets/lalaflix1.png';\r\n//import UserImg from '../../assets/hBEe3tdn_400x400.png';\r\n\r\n\r\nimport './style.css';\r\n\r\nexport default ({black}) => {\r\n  return (\r\n    <header className={black ? 'black' : ''}>\r\n      <div className=\"header--logo\">\r\n        <a href=\"https://github.com/JuniorUbarana/netflix-clone\">\r\n          <img src={Logo} alt=\"Logo\"/>\r\n        </a>\r\n      </div>\r\n      <div className=\"header--user\">\r\n        <a href=\"https://github.com/JuniorUbarana\">\r\n          <img src=\"https://avatars.githubusercontent.com/u/32462908?s=60&v=4\" alt=\"Foto\"/>\r\n        </a>\r\n      </div>\r\n    </header>\r\n  )\r\n}",{"ruleId":"41","severity":1,"message":"42","line":5,"column":1,"nodeType":"43","endLine":20,"endColumn":2},{"ruleId":"41","severity":1,"message":"42","line":9,"column":1,"nodeType":"43","endLine":64,"endColumn":2},{"ruleId":"41","severity":1,"message":"42","line":5,"column":1,"nodeType":"43","endLine":43,"endColumn":2},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"41","severity":1,"message":"48","line":10,"column":1,"nodeType":"43","endLine":97,"endColumn":2},{"ruleId":"49","severity":1,"message":"50","line":84,"column":7,"nodeType":"51","messageId":"52","endLine":92,"endColumn":8},{"ruleId":"44","replacedBy":"53"},{"ruleId":"46","replacedBy":"54"},{"ruleId":"41","severity":1,"message":"42","line":8,"column":1,"nodeType":"43","endLine":23,"endColumn":2},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"Assign object to a variable before exporting as module default","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["55"],["56"],"no-global-assign","no-unsafe-negation"]